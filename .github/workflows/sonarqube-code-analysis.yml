name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.x'  # Adjust the version as needed

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Run tests
      run: dotnet test --collect:"XPlat Code Coverage"

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Convert coverage to OpenCover format
      run: |
        export PATH="$PATH:/home/runner/.dotnet/tools"
        reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coverage -reporttypes:opencover

    - name: Install SonarScanner
      run: |
        curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner.zip -d $HOME
        export PATH="$HOME/sonar-scanner-4.6.2.2472-linux/bin:$PATH"

    - name: Run SonarQube scan
      run: |
        export PATH="$HOME/sonar-scanner-4.6.2.2472-linux/bin:$PATH"
        sonar-scanner -X
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
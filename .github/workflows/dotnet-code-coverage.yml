name: Code Coverage

on:
#   push:
#     branches: [ main ]
  pull_request:
    branches: [ main ]
permissions:
  id-token: write  # Ensure the id-token permission is set to write
  contents: read   # Default permission for reading repository contents
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Run tests with coverage
      run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage"

    - name: Generate HTML report
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator -reports:**/TestResults/**/*.xml -targetdir:coveragereport -reporttypes:Html

    # - name: Upload HTML coverage report
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: code-coverage-html-report
    #     path: coveragereport
    - name: Deploy to GitHub Pages
      env:
        G_AUTO_TOKEN: ${{ secrets.G_AUTO_TOKEN }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git clone --single-branch --branch gh-pages https://x-access-token:${{ secrets.G_AUTO_TOKEN }}@github.com/${{ github.repository }} gh-pages
        cp -r coveragereport/* gh-pages/
        cd gh-pages
        git add .
        git commit -m 'Update code coverage report'
        git push origin gh-pages

    
    # - name: Create Pull Request Comment
    #   if: github.event_name == 'pull_request'
    #     uses: actions/github-script@v6
    #     with:
    #     script: |
    #         const github = require('@actions/github');
    #         const context = github.context;

    #         const comment = `Code coverage report is available [here](https://${context.repo.owner}.github.io/${context.repo.repo})`;

    #         github.rest.issues.createComment({
    #         ...context.repo,
    #         issue_number: context.issue.number,
    #         body: comment
    #         });
    # env:
    #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

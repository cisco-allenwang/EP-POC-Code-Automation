name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarQube Analysis
    runs-on: windows-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history to ensure correct analysis

      # Setup .NET Core SDK
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.x'  # Use the version your Blazor WASM project needs

      # Install SonarQube Scanner
      - name: Install SonarQube Scanner
        run: dotnet tool install --global dotnet-sonarscanner

      # Run SonarQube Scanner Begin
      - name: Run SonarQube Scanner Begin
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"EP-POC-Code-Automation-Key" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      # Build the project
      - name: Build Project
        run: dotnet build --configuration Release


      # Run SonarQube Scanner End
      - name: Run SonarQube Scanner End
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      # Check SonarQube Quality Gate Status
      - name: Check SonarQube Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "Checking SonarQube Quality Gate..."
          response=$(curl -s -u $SONAR_TOKEN: "$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=BlazorWasmProjectKey")
          status=$(echo $response | jq -r '.projectStatus.status')

          echo "Quality Gate status: $status"

          if [[ "$status" != "OK" ]]; then
            echo "Quality Gate failed!"
            exit 1
          else
            echo "Quality Gate passed!"
          fi
